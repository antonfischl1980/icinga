From ab149af776f4356f51990a827e00ba4a25c558bc Mon Sep 17 00:00:00 2001
From: Jan Wagner <waja@cyconet.org>
Date: Tue, 22 Mar 2022 11:47:42 +0100
Subject: [PATCH 1/2] Migrating to python3

Converted to python3 with [2to3](http://python3porting.com/2to3.html).
(Closes #15)
---
 check/check_nextcloud.py | 50 ++++++++++++++++++++--------------------
 1 file changed, 25 insertions(+), 25 deletions(-)

diff --git a/check/check_nextcloud.py b/check/check_nextcloud.py
index 12394db..94d437d 100644
--- a/check/check_nextcloud.py
+++ b/check/check_nextcloud.py
@@ -19,7 +19,7 @@
 # 
 #################
 
-import urllib2, base64, xml.etree.ElementTree, sys, traceback, ssl, re
+import urllib.request, urllib.error, urllib.parse, base64, xml.etree.ElementTree, sys, traceback, ssl, re
 
 # Some helper functions
 def calc_size_suffix(num, suffix='B'):
@@ -60,7 +60,7 @@ def calc_size_nagios(num, suffix='B'):
 
 # Print the version of this script
 if options.version:
-	print 'Version 1.3'
+	print('Version 1.3')
 	sys.exit(0)
 
 # Validate the user input...
@@ -102,7 +102,7 @@ def calc_size_nagios(num, suffix='B'):
 
 try:
 	# Create the request
-	request = urllib2.Request(url)
+	request = urllib.request.Request(url)
 
 	# Add the authentication and api request header
 	request.add_header('Authorization', "Basic %s" % credential)
@@ -117,30 +117,30 @@ def calc_size_nagios(num, suffix='B'):
 
 	# Proxy handler
 	if(options.ignore_proxy):
-		proxy_handler = urllib2.ProxyHandler({})
-		ctx_handler = urllib2.HTTPSHandler(context=ctx)
-		opener = urllib2.build_opener(proxy_handler, ctx_handler)
+		proxy_handler = urllib.request.ProxyHandler({})
+		ctx_handler = urllib.request.HTTPSHandler(context=ctx)
+		opener = urllib.request.build_opener(proxy_handler, ctx_handler)
 
 		response = opener.open(request)
 	else:
-		response = urllib2.urlopen(request, context=ctx)
+		response = urllib.request.urlopen(request, context=ctx)
 
 	# Read the content
 	content = response.read()
 
-except urllib2.HTTPError as error:      # User is not authorized (401)
-	print 'UNKOWN - [WEBREQUEST] {0} {1}'.format(error.code, error.reason)
+except urllib.error.HTTPError as error:      # User is not authorized (401)
+	print('UNKOWN - [WEBREQUEST] {0} {1}'.format(error.code, error.reason))
 	sys.exit(3)
 
-except urllib2.URLError as error:	# Connection has timed out (wrong url / server down)
-	print 'UNKOWN - [WEBREQUEST] {0}'.format(str(error.reason).split(']')[0].strip())
+except urllib.error.URLError as error:	# Connection has timed out (wrong url / server down)
+	print('UNKOWN - [WEBREQUEST] {0}'.format(str(error.reason).split(']')[0].strip()))
 	sys.exit(3)
 
 try:
 	# Convert the webrequest response to xml
 	xml_root = xml.etree.ElementTree.fromstring(content)
 except xml.etree.ElementTree.ParseError:
-	print 'UNKOWN - [XML] Content contains no or wrong xml data... check the url and if the api is reachable!'
+	print('UNKOWN - [XML] Content contains no or wrong xml data... check the url and if the api is reachable!')
 	sys.exit(3)
 
 # Check if the xml is valid and the api gives usefull informations
@@ -154,11 +154,11 @@ def calc_size_nagios(num, suffix='B'):
 
 	# Check the meta informations
 	if not (xml_meta_status == 'ok' and xml_meta_statuscode == 200 and xml_meta_message == 'OK'):
-		print 'UNKOWN - [API] invalid meta data... status: {0}, statuscode: {1}, message: {2}'.format(xml_meta_status, xml_meta_statuscode, xml_meta_message)
+		print('UNKOWN - [API] invalid meta data... status: {0}, statuscode: {1}, message: {2}'.format(xml_meta_status, xml_meta_statuscode, xml_meta_message))
 		sys.exit(3)
 
 except AttributeError:
-	print 'UNKOWN - [XML] Content contains no or wrong xml data... check the url and if the api is reachable!'
+	print('UNKOWN - [XML] Content contains no or wrong xml data... check the url and if the api is reachable!')
 	sys.exit(3)
 
 # Performance data format
@@ -174,7 +174,7 @@ def calc_size_nagios(num, suffix='B'):
 
 	xml_system_version = str(xml_system.find('version').text)
 
-	print 'OK - Nextcloud version: {0}'.format(xml_system_version)
+	print('OK - Nextcloud version: {0}'.format(xml_system_version))
 	sys.exit(0)
 
 # Get informations about the storage
@@ -189,7 +189,7 @@ def calc_size_nagios(num, suffix='B'):
 	xml_storage_storages_home = int(xml_storage.find('num_storages_home').text)
 	xml_storage_storages_other = int(xml_storage.find('num_storages_other').text)
 
-	print 'OK - Users: {1}, files: {2}, storages: {3}, storages local: {4}, storages home: {5}, storages other: {6} | users={1}{0} files={2}{0} storages={3}{0} storages_local={4}{0} storages_home={5}{0} storage_other={6}'.format(perfdata_format, xml_storage_users, xml_storage_files, xml_storage_storages, xml_storage_storages_local, xml_storage_storages_home, xml_storage_storages_other)
+	print('OK - Users: {1}, files: {2}, storages: {3}, storages local: {4}, storages home: {5}, storages other: {6} | users={1}{0} files={2}{0} storages={3}{0} storages_local={4}{0} storages_home={5}{0} storage_other={6}'.format(perfdata_format, xml_storage_users, xml_storage_files, xml_storage_storages, xml_storage_storages_local, xml_storage_storages_home, xml_storage_storages_other))
 	sys.exit(0)
 
 # Get informations about the shares
@@ -205,7 +205,7 @@ def calc_size_nagios(num, suffix='B'):
 	xml_shares_fed_shares_sent = int(xml_shares.find('num_fed_shares_sent').text)
 	xml_shares_fed_shares_received = int(xml_shares.find('num_fed_shares_received').text)
 
-	print 'OK - Shares: {1}, shares user: {2}, shares groups: {3}, shares link: {4}, shares link no password: {5}, shares federation sent: {6}, shares federation received: {7} | shares={1}{0} shares_user={2}{0} shares_groups={3}{0} shares_link={4}{0} shares_link_no_password={5}{0} federation_shares_sent={6}{0} federation_shares_received={7}'.format(perfdata_format, xml_shares_shares, xml_shares_shares_user, xml_shares_shares_groups, xml_shares_shares_link, xml_shares_shares_link_no_password, xml_shares_fed_shares_sent, xml_shares_fed_shares_received)
+	print('OK - Shares: {1}, shares user: {2}, shares groups: {3}, shares link: {4}, shares link no password: {5}, shares federation sent: {6}, shares federation received: {7} | shares={1}{0} shares_user={2}{0} shares_groups={3}{0} shares_link={4}{0} shares_link_no_password={5}{0} federation_shares_sent={6}{0} federation_shares_received={7}'.format(perfdata_format, xml_shares_shares, xml_shares_shares_user, xml_shares_shares_groups, xml_shares_shares_link, xml_shares_shares_link_no_password, xml_shares_fed_shares_sent, xml_shares_fed_shares_received))
 	sys.exit(0)
 
 # Get informations about the webserver
@@ -213,7 +213,7 @@ def calc_size_nagios(num, suffix='B'):
 if options.check == 'webserver':
 	xml_webserver = str(xml_root.find('data').find('server').find('webserver').text)
 
-	print 'OK - Webserver: {0}'.format(xml_webserver)
+	print('OK - Webserver: {0}'.format(xml_webserver))
 	sys.exit(0)
 
 # Get informations about php
@@ -226,7 +226,7 @@ def calc_size_nagios(num, suffix='B'):
 	xml_php_max_execution_time = str(xml_php.find('max_execution_time').text)
 	xml_php_upload_max_filesize = int(xml_php.find('upload_max_filesize').text)
 
-	print 'OK - PHP version: {0}, memory limit {1}, max execution time: {2}s, upload max filesize: {3}'.format(xml_php_version, calc_size_suffix(xml_php_memory_limit), xml_php_max_execution_time, calc_size_suffix(xml_php_upload_max_filesize))
+	print('OK - PHP version: {0}, memory limit {1}, max execution time: {2}s, upload max filesize: {3}'.format(xml_php_version, calc_size_suffix(xml_php_memory_limit), xml_php_max_execution_time, calc_size_suffix(xml_php_upload_max_filesize)))
 	sys.exit(0)
 
 # Get informations about the database
@@ -238,7 +238,7 @@ def calc_size_nagios(num, suffix='B'):
 	xml_database_version = str(xml_database.find('version').text)
 	xml_database_size = float(xml_database.find('size').text)
 
-	print 'OK - Database: {0}, version {1}, size: {2} | database_size={3}'.format(xml_database_type, xml_database_version, calc_size_suffix(xml_database_size), calc_size_nagios(xml_database_size))
+	print('OK - Database: {0}, version {1}, size: {2} | database_size={3}'.format(xml_database_type, xml_database_version, calc_size_suffix(xml_database_size), calc_size_nagios(xml_database_size)))
 	sys.exit(0)
 
 # Check the active users
@@ -250,7 +250,7 @@ def calc_size_nagios(num, suffix='B'):
 	xml_activeUsers_last1hour = int(xml_activeUsers.find('last1hour').text)
 	xml_activeUsers_last24hours = int(xml_activeUsers.find('last24hours').text)
 
-	print 'OK - Last 5 minutes: {1} user(s), last 1 hour: {2} user(s), last 24 hour: {3} user(s) | users_last_5_minutes={1}{0} users_last_1_hour={2}{0} users_last_24_hours={3}'.format(perfdata_format, xml_activeUsers_last5minutes, xml_activeUsers_last1hour, xml_activeUsers_last24hours)
+	print('OK - Last 5 minutes: {1} user(s), last 1 hour: {2} user(s), last 24 hour: {3} user(s) | users_last_5_minutes={1}{0} users_last_1_hour={2}{0} users_last_24_hours={3}'.format(perfdata_format, xml_activeUsers_last5minutes, xml_activeUsers_last1hour, xml_activeUsers_last24hours))
 	sys.exit(0)
 
 if options.check == 'uploadFilesize':
@@ -263,10 +263,10 @@ def calc_size_nagios(num, suffix='B'):
 	upload_max_filesize = calc_size_suffix(xml_php_upload_max_filesize)
 
 	if options.upload_filesize == upload_max_filesize:
-		print 'OK - Upload max filesize: {0}'.format(upload_max_filesize)
+		print('OK - Upload max filesize: {0}'.format(upload_max_filesize))
 		sys.exit(0)
 	else:
-		print 'CRITICAL - Upload max filesize is set to {0}, but should be {1}'.format(upload_max_filesize, options.upload_filesize)
+		print('CRITICAL - Upload max filesize is set to {0}, but should be {1}'.format(upload_max_filesize, options.upload_filesize))
 		sys.exit(2)
 
 # Get informations about any app updates
@@ -277,12 +277,12 @@ def calc_size_nagios(num, suffix='B'):
 	xml_apps_num_updates_available = int(xml_apps.find('num_updates_available').text)
 
 	if xml_apps_num_updates_available == 0:
-		print 'OK - No apps requiring update'
+		print('OK - No apps requiring update')
 		sys.exit(0)
 	else:
 		xml_apps_updates = xml_apps.find('app_updates')
 		xml_apps_list = []
 		for app in xml_apps_updates:
 			xml_apps_list.append('{0}->{1}'.format(app.tag, app.text))
-		print 'WARNING - {0} apps require update: {1}'.format(xml_apps_num_updates_available, ' ,'.join(xml_apps_list))
+		print('WARNING - {0} apps require update: {1}'.format(xml_apps_num_updates_available, ' ,'.join(xml_apps_list)))
 		sys.exit(1)

From 363977032e1c115bfd1c74ddf8353433280ab513 Mon Sep 17 00:00:00 2001
From: Jan Wagner <waja@cyconet.org>
Date: Tue, 22 Mar 2022 12:00:50 +0100
Subject: [PATCH 2/2] Fix credential encoding

---
 check/check_nextcloud.py | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/check/check_nextcloud.py b/check/check_nextcloud.py
index 94d437d..9af06f0 100644
--- a/check/check_nextcloud.py
+++ b/check/check_nextcloud.py
@@ -98,14 +98,14 @@ def calc_size_nagios(num, suffix='B'):
 url = '{0}://{1}{2}'.format(options.protocol, hostname, api_url)
 
 # Encode credentials as base64
-credential = base64.b64encode(options.username + ':' + options.password)
+credential = base64.b64encode(bytes('%s:%s' % (options.username, options.password), 'ascii'))
 
 try:
 	# Create the request
 	request = urllib.request.Request(url)
 
 	# Add the authentication and api request header
-	request.add_header('Authorization', "Basic %s" % credential)
+	request.add_header("Authorization", "Basic %s" % credential.decode('utf-8'))
 	request.add_header('OCS-APIRequest','true')
 
 	# SSL/TLS certificate validation (see: https://stackoverflow.com/questions/19268548/python-ignore-certificate-validation-urllib2)
