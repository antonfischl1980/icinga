[check_haproxy_pl-t.graph]
check_command = "check_haproxy_pl, by_ssh_check_haproxy_pl"

[check_haproxy_pl-t.metrics_filters]
t.value = "$service_name_template$.perfdata.t.value"

[check_haproxy_pl-t.urlparams]
areaAlpha = "0.5"
areaMode = "first"
lineWidth = "2"
min = "0"
title = "Request Time (ms)"
yUnitSystem = "msec"

[check_haproxy_pl-t.functions]
t.value = "legendValue(alias(color(keepLastValue(scale($metric$, 1000)), '#1a7dd7'), 'Request Time (ms)'), 'last', 'max', 'avg', 'min', 'si')"




[check_haproxy_pl-sess.graph]
check_command = "check_haproxy_pl, by_ssh_check_haproxy_pl"

[check_haproxy_pl-sess.metrics_filters]
sess.value = "$service_name_template$.perfdata.sess_$b$.value"

[check_haproxy_pl-sess.urlparams]
areaAlpha = "0.5"
areaMode = "first"
lineWidth = "2"
min = "0"
title = "Sessions for Backend $b$"
yUnitSystem = "si"

[check_haproxy_pl-sess.functions]
sess.value = "legendValue(alias(color(keepLastValue($metric$), '#1a7dd7'), 'Sessions'), 'last', 'max', 'avg', 'min', 'si')"




[check_haproxy_pl-bytes.graph]
check_command = "check_haproxy_pl, by_ssh_check_haproxy_pl"

[check_haproxy_pl-bytes.metrics_filters]
bytes.in = "$service_name_template$.perfdata.bytes_in_$b$.value"
bytes.out = "$service_name_template$.perfdata.bytes_out_$b$.value"


[check_haproxy_pl-bytes.urlparams]
areaAlpha = "0.5"
areaMode = "all"
lineWidth = "2"
title = "Traffic for Backend $b$"
yUnitSystem = "binary"

[check_haproxy_pl-bytes.functions]
bytes.in = "legendValue(alias(color(keepLastValue(scale(perSecond($metric$),-1)), '#76B26D'), 'Bytes in/sec'), 'last', 'max', 'avg', 'min', 'binary')"
bytes.out = "legendValue(alias(color(keepLastValue(perSecond($metric$)), '#EAB839'), 'Bytes out/sec'), 'last', 'max', 'avg', 'min', 'si')"


